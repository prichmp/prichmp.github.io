<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Write Forward</title>
    <description>The Write Forward Logging Framework for Java simplifies logging for Java. Write easy-to-use, portable, and future-proof logging code. Works with SLF4J, Log4J, Logback, and java.util.logging.
</description>
    <link>http://prichmp.github.io/Write-Forward/</link>
    <atom:link href="http://prichmp.github.io/Write-Forward/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 02 May 2016 16:48:54 -0600</pubDate>
    <lastBuildDate>Mon, 02 May 2016 16:48:54 -0600</lastBuildDate>
    <generator>Jekyll v3.1.3</generator>
    
      <item>
        <title>Using SLF4J</title>
        <description>&lt;h1 id=&quot;using-slf4j&quot;&gt;Using SLF4J&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://www.slf4j.org/&quot;&gt;SLF4J&lt;/a&gt; is an abstraction for other logging frameworks. All of the most popular logging frameworks support a SLF4J implementation. This makes SLF4J a nice target for Write Forward to output to.&lt;/p&gt;

&lt;p&gt;Output to SLF4J is done through the &lt;code class=&quot;highlighter-rouge&quot;&gt;org.writeforward.logger.writers.Slf4jOutput&lt;/code&gt; class. The SLF4J logger that Write Forward outputs to is managed by this class. The logger that Write Forward uses has the name of this class. (i.e. &lt;code class=&quot;highlighter-rouge&quot;&gt;LoggerFactory.getLogger(Slf4jOutput.class);&lt;/code&gt;)&lt;/p&gt;

&lt;h2 id=&quot;configuring-write-forward&quot;&gt;Configuring Write Forward&lt;/h2&gt;
&lt;p&gt;To configure Write Forward the recommended way is to put a configuration file in the  &lt;code class=&quot;highlighter-rouge&quot;&gt;/src/main/resources/&lt;/code&gt; folder in your Java, Scala or Kotlin project.&lt;/p&gt;

&lt;p&gt;Here is an example &lt;code class=&quot;highlighter-rouge&quot;&gt;/src/main/resources/write-forward-config.yaml&lt;/code&gt; file.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;writeforward: #Root of the configuration
         isslow: true #If true performs slow reflection operations
         numberofstackframes: 5 #Determines the max number of stack frames put into the message&#39;s stack trace.
         outputs:
              - name: slf4j #Uses the default SLF4J outputter.
                format: |+ #Formats the message using Pebble
                    ===================================================================================================================
                    [{{ level }}] {{ marker }} {{ timestamp }} {{ thread }} {% if class is not empty %}{{ class }}:{{ line }}{% endif %}

                    {{ message }}

                    {% if values is not empty %}
                    {% for value in values %}
                    {{ value.key }} = {{ value.value }}

                    {% endfor %}
                    {% endif %}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;levels&quot;&gt;Levels&lt;/h2&gt;

&lt;p&gt;Write Forward uses the following levels:
 - TRACE
 - DEBUG
 - INFO
 - WARN
 - ERROR
 - FATAL&lt;/p&gt;

&lt;p&gt;SLF4J only recognizes the following levels:
 - TRACE
 - DEBUG
 - INFO
 - WARN
 - ERROR&lt;/p&gt;

&lt;p&gt;There is no FATAL level in SLF4J. When Write Forward uses SLF4J, it adds a “FATAL” marker to any FATAL-level events. SLF4J will convert the fatal marker back into the FATAL level if the underlying framework supports the FATAL logging level.&lt;/p&gt;
</description>
        <pubDate>Mon, 02 May 2016 00:00:00 -0600</pubDate>
        <link>http://prichmp.github.io/Write-Forward/documentation/2016/05/02/slf4j.html</link>
        <guid isPermaLink="true">http://prichmp.github.io/Write-Forward/documentation/2016/05/02/slf4j.html</guid>
        
        
        <category>documentation</category>
        
      </item>
    
      <item>
        <title>Pebble Formatter</title>
        <description>&lt;h1 id=&quot;the-pebble-formatter&quot;&gt;The Pebble Formatter&lt;/h1&gt;
&lt;p&gt;Write Forward uses &lt;a href=&quot;http://www.mitchellbosecke.com/pebble/home&quot;&gt;Pebble&lt;/a&gt; a lightweight, decently-fast template engine originally designed for webpages. Write Forward uses it to format output messages. One of the advantages of Pebble is that the message is compiled once and reused many times.&lt;/p&gt;

&lt;h2 id=&quot;configuration-file&quot;&gt;Configuration File&lt;/h2&gt;

&lt;p&gt;The following is a sample &lt;code class=&quot;highlighter-rouge&quot;&gt;/src/main/resources/write-forward-config.yaml&lt;/code&gt; configuration file.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;writeforward:
         isslow: true
         numberofstackframes: 2
         outputs:
              - name: console
                format: |+ # See http://stackoverflow.com/questions/3790454/in-yaml-how-do-i-break-a-string-over-multiple-lines for YAML multiline strings.

                    [{{ level }}] {{ marker }} {{ timestamp }} {% if class is not empty %}{{ class }}:{{ line }}{% endif %}

                    {{ message }}

                    {% if exception is not empty %}
                    {{ exception }}

                    {% endif %}
                    {% if values is not empty %}
                    {% for value in values %}
                    {{ value.key }} = {{ value.value }}

                    {% endfor %}
                    {% endif %}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The writeforward –&amp;gt; outputs –&amp;gt; format key in the YAML file holds the format string for Pebble. By editing this format the output to the underlying logging framework is changed.&lt;/p&gt;

&lt;h2 id=&quot;applied-to-the-format&quot;&gt;Applied to the Format&lt;/h2&gt;
&lt;p&gt;The following variables are applied to each format when a new message is being formatted using Pebble.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Key&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;exception&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;exception.toString()&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;exception.message&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;exception.getLocalizedMessage()&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;exception.cause&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;exception.getCause().toString()&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;exception.name&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;exception.getClass().getName()&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;timestamp&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;May 2, 2016 12:49:58 PM MDT&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;time&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;12:49:58 PM MDT&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;date&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;May 2, 2016&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;method&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;The method name that Write Forward was called from. (e.x. myMethod)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;level&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;One of the logging levels in all caps (e.x. DEBUG)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;line&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;The line number that Write Forward was called from. May be -1 if the Write Forward configuration isslow = true&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;values&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;A collection of map entries (i.e. values.entrySet()) representing any .withValue(String key, String value) entries.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;thread&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;The thread name that Write Forward was called from.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;message&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;The message as set with .message(String message)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;file&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;The filename of the file Write Forward was called from (e.x. MyClass.java)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;stacktrace&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;An array of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/StackTraceElement.html&quot;&gt;StackTraceElement&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;marker&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Each marker output with a space in-between (e.x. HTTPENGINE PLUGIN)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;class&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;The full class name of the location Write Forward was called from. (e.x. com.company.project.MyClass)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>
        <pubDate>Mon, 02 May 2016 00:00:00 -0600</pubDate>
        <link>http://prichmp.github.io/Write-Forward/documentation/2016/05/02/pebble.html</link>
        <guid isPermaLink="true">http://prichmp.github.io/Write-Forward/documentation/2016/05/02/pebble.html</guid>
        
        
        <category>documentation</category>
        
      </item>
    
      <item>
        <title>Using Logback</title>
        <description>&lt;h1 id=&quot;using-logback&quot;&gt;Using Logback&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://logback.qos.ch/&quot;&gt;Logback&lt;/a&gt; is a SLF4J-based logging framework.&lt;/p&gt;

&lt;h2 id=&quot;project-setup&quot;&gt;Project Setup&lt;/h2&gt;

&lt;p&gt;Add the following dependencies to your Maven POM. Check with The &lt;a href=&quot;http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22ch.qos.logback%22%20AND%20a%3A%22logback-classic%22&quot;&gt;Central Maven Repository&lt;/a&gt; to determine the current version for Logback. Check the [download page]{ /Write-Forward/download.html } for the current Write Forward version.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;ch.qos.logback&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;logback-classic&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;${logback-version}&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;

&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;org.writeforward&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;logger&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;${write-forward-version}&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;configuring-write-forward&quot;&gt;Configuring Write Forward&lt;/h2&gt;
&lt;p&gt;Use SLF4J to output to Logback. To configure Write Forward the recommended way is to put a configuration file in the  &lt;code class=&quot;highlighter-rouge&quot;&gt;/src/main/resources/&lt;/code&gt; folder in your Java, Scala, or Kotlin project.&lt;/p&gt;

&lt;p&gt;Here is an example &lt;code class=&quot;highlighter-rouge&quot;&gt;/src/main/resources/write-forward-config.yaml&lt;/code&gt; file for Logback.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;writeforward:
         isslow: true
         numberofstackframes: 5
         outputs:
              - name: slf4j
                format: |+
                    ===================================================================================================================
                    [{{ level }}] {{ marker }} {{ timestamp }} {{ thread }} {% if class is not empty %}{{ class }}:{{ line }}{% endif %}

                    {{ message }}

                    {% if values is not empty %}
                    {% for value in values %}
                    {{ value.key }} = {{ value.value }}

                    {% endfor %}
                    {% endif %}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;configuring-logback&quot;&gt;Configuring Logback&lt;/h2&gt;
&lt;p&gt;To configure Logback, consult the &lt;a href=&quot;http://logback.qos.ch/manual/configuration.html&quot;&gt;Logback documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Logback, in similar style to Write Forward, also likes to have a configuration file live in the &lt;code class=&quot;highlighter-rouge&quot;&gt;/src/main/resources&lt;/code&gt; folder in your project.&lt;/p&gt;

&lt;p&gt;To use the following sample configuration create a new file with the name and location &lt;code class=&quot;highlighter-rouge&quot;&gt;/src/main/resources/logback.xml&lt;/code&gt; and copy the below XML content into it. Once the file is in place Logback should automatically locate it on the next run.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;appender&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;STDOUT&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ch.qos.logback.core.ConsoleAppender&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;encoder&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ch.qos.logback.classic.encoder.PatternLayoutEncoder&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		    &lt;span class=&quot;nt&quot;&gt;&amp;lt;pattern&amp;gt;&lt;/span&gt;%msg&lt;span class=&quot;nt&quot;&gt;&amp;lt;/pattern&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/encoder&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/appender&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;logger&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.mkyong.web&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;level=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;debug&quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;additivity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;appender-ref&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ref=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;STDOUT&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/logger&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;root&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;level=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;debug&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;appender-ref&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ref=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;STDOUT&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/root&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 02 May 2016 00:00:00 -0600</pubDate>
        <link>http://prichmp.github.io/Write-Forward/documentation/2016/05/02/logback.html</link>
        <guid isPermaLink="true">http://prichmp.github.io/Write-Forward/documentation/2016/05/02/logback.html</guid>
        
        
        <category>documentation</category>
        
      </item>
    
  </channel>
</rss>
